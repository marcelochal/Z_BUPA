CLASS zcl_im_bupa_bank_check_test DEFINITION FOR TESTING
    RISK LEVEL HARMLESS DURATION SHORT FINAL.

*?﻿<asx:abap xmlns:asx="http://www.sap.com/abapxml" version="1.0">
*?<asx:values>
*?<TESTCLASS_OPTIONS>
*?<TEST_CLASS>zcl_Im_Bupa_Bank_Check_Test
*?</TEST_CLASS>
*?<TEST_MEMBER>f_Cut
*?</TEST_MEMBER>
*?<OBJECT_UNDER_TEST>ZCL_IM_BUPA_BANK_CHECK
*?</OBJECT_UNDER_TEST>
*?<OBJECT_IS_LOCAL/>
*?<GENERATE_FIXTURE>X
*?</GENERATE_FIXTURE>
*?<GENERATE_CLASS_FIXTURE>X
*?</GENERATE_CLASS_FIXTURE>
*?<GENERATE_INVOCATION>X
*?</GENERATE_INVOCATION>
*?<GENERATE_ASSERT_EQUAL>X
*?</GENERATE_ASSERT_EQUAL>
*?</TESTCLASS_OPTIONS>
*?</asx:values>
*?</asx:abap>
  PRIVATE SECTION.
    DATA:
      f_cut                      TYPE REF TO zcl_im_bupa_bank_check,    "class under test
      v_activity                 TYPE bu_aktdb,                         "Activity (01= Create, 02= Change, 06= Delete)
      v_bkvid                    TYPE bu_bkvid,                         "Bank Details ID
      s_bankdetail_x             TYPE bapibus1006_bankdetail_x,         "SAP BP: BAPI Structure for Bank Details Data, Update Bar
      s_but000                   TYPE but000,                      "BP: General Data I
      s_bankdetail               TYPE bapibus1006_bankdetail,      "BAPI Structure for Bank Details Data
      t_but0bk_completed         TYPE vbut0bk,                     "Change Document Structure: Generated by RSSCD000
      v_x_save                   TYPE boole_d,                     "Indicator: Save Bank?
      v_dont_check_bank_conn     TYPE boole_d,                     "'X'  = Do Not Check Bank Details ID Yet
      v_check_only_external_data TYPE boole_d.                     "'X' = Check Only (Internal Usage)

    CONSTANTS:
      c_error_ctrl_key_less_than_2 TYPE syst-msgno VALUE '001' ##NO_TEXT,
      c_error_acct_is_not_numeric  TYPE syst-msgno VALUE '002' ##NO_TEXT,
      c_error_acct_filled_with_dv  TYPE syst-msgno VALUE '003' ##NO_TEXT,
      c_error_ctrl_key_is_initial  TYPE syst-msgno VALUE '004' ##NO_TEXT,
      c_error_branch_dv_no_equal   TYPE syst-msgno VALUE '005' ##NO_TEXT,
      c_error_acct_dv_no_equal     TYPE syst-msgno VALUE '006' ##NO_TEXT.

*    CLASS-METHODS: class_setup.
*    CLASS-METHODS: class_teardown.
    METHODS:
      setup,
      return_msg
        IMPORTING iv_msgno           TYPE syst-msgno
        CHANGING  it_return_expected TYPE bapiret2_t.
*    METHODS: teardown.
    METHODS:
      check_no_erros                FOR TESTING,
      check_ctrl_key_less_than_2    FOR TESTING,
      check_acct_is_not_numeric     FOR TESTING,
      check_acct_filled_with_dv     FOR TESTING,
      check_ctrl_key_is_initial     FOR TESTING,
      check_branch_dv_no_equal      FOR TESTING,
      check_acct_dv_no_equal        FOR TESTING,
      check_santander               FOR TESTING,
      check_bradesco FOR TESTING RAISING cx_static_check.

ENDCLASS.       "zcl_Im_Bupa_Bank_Check_Test


CLASS zcl_im_bupa_bank_check_test IMPLEMENTATION.

*  METHOD class_setup.
*  ENDMETHOD.

*  METHOD class_teardown.
*  ENDMETHOD.

  METHOD setup.

    CREATE OBJECT f_cut.

    v_activity                  = '01'.                     "Criar
    v_bkvid                     = '0001'.                   "Primeira linha da tela
    s_bankdetail-bank_ctry      = 'BR'.
    s_bankdetail-accountholder  = 'TESTECLASS'.
    s_bankdetail_x-bank_acct    = 'X'. "Houve Modificação

  ENDMETHOD.

*  METHOD teardown.
*  ENDMETHOD.

**********************************************************************
**********************************************************************
  METHOD check_no_erros.

    DATA:
      et_return          TYPE bapiret2_t,                  "Return table
      et_return_expected TYPE bapiret2_t.                  "Return table expected

    v_activity                  = '02'.             "Alterar
    s_bankdetail-bank_key       = '23723071'.       "Banco Bradesco
    s_bankdetail-bank_acct      = '0000000027607'.
    s_bankdetail-bank_ctry      = '63'.             "DV está correto!


    f_cut->if_ex_bupa_bank_check~check(
      EXPORTING
       iv_activity                  = v_activity
       is_but000                    = s_but000
       iv_bkvid                     = v_bkvid
       is_bankdetail                = s_bankdetail
       it_but0bk_completed          = t_but0bk_completed
       is_bankdetail_x              = s_bankdetail_x
       iv_x_save                    = v_x_save
       iv_dont_check_bank_conn      = v_dont_check_bank_conn
       iv_check_only_external_data  = v_check_only_external_data
      CHANGING
        et_return = et_return ).

    cl_abap_unit_assert=>assert_equals(
      act   = et_return
      exp   = et_return_expected       "Deve retornar vazio!!!
    ).
  ENDMETHOD.


**********************************************************************
**********************************************************************
  METHOD check_ctrl_key_less_than_2.

    DATA:
      et_return          TYPE bapiret2_t,                  "Return table
      et_return_expected TYPE bapiret2_t.                  "Return table expected


    s_bankdetail-bank_key      =   '00191505'. "Banco do Brasil
    s_bankdetail-bank_acct     =   '123456'.
    s_bankdetail-ctrl_key      =   '0'. "'90'. !ERRO DIGITO MENOR QUE 2



    CALL METHOD me->return_msg
      EXPORTING
        iv_msgno           = c_error_ctrl_key_less_than_2
      CHANGING
        it_return_expected = et_return_expected.

    f_cut->if_ex_bupa_bank_check~check(
      EXPORTING
       iv_activity                  = v_activity
       is_but000                    = s_but000
       iv_bkvid                     = v_bkvid
       is_bankdetail                = s_bankdetail
       it_but0bk_completed          = t_but0bk_completed
       is_bankdetail_x              = s_bankdetail_x
       iv_x_save                    = v_x_save
       iv_dont_check_bank_conn      = v_dont_check_bank_conn
       iv_check_only_external_data  = v_check_only_external_data
      CHANGING
        et_return = et_return ).

    cl_abap_unit_assert=>assert_equals(
      act   = et_return
      exp   = et_return_expected      ).
  ENDMETHOD.

**********************************************************************
**********************************************************************
  METHOD check_acct_is_not_numeric.

    DATA:
      et_return          TYPE bapiret2_t,                  "Return table
      et_return_expected TYPE bapiret2_t.                  "Return table expected


    s_bankdetail-bank_key      =   '03371318'. "Santander
    s_bankdetail-bank_acct     =   '01007AA6'. "Contem LETRAS!!
    s_bankdetail-ctrl_key      =   '82'.

    CALL METHOD me->return_msg
      EXPORTING
        iv_msgno           = c_error_acct_is_not_numeric
      CHANGING
        it_return_expected = et_return_expected.

    f_cut->if_ex_bupa_bank_check~check(
      EXPORTING
       iv_activity                  = v_activity
       is_but000                    = s_but000
       iv_bkvid                     = v_bkvid
       is_bankdetail                = s_bankdetail
       it_but0bk_completed          = t_but0bk_completed
       is_bankdetail_x              = s_bankdetail_x
       iv_x_save                    = v_x_save
       iv_dont_check_bank_conn      = v_dont_check_bank_conn
       iv_check_only_external_data  = v_check_only_external_data
      CHANGING
        et_return = et_return ).

    cl_abap_unit_assert=>assert_equals(
      act   = et_return
      exp   = et_return_expected      ).

  ENDMETHOD.
**********************************************************************
  METHOD check_acct_dv_no_equal.

    DATA:
      et_return          TYPE bapiret2_t,                  "Return table
      et_return_expected TYPE bapiret2_t,                  "Return table expected
      wa_return          TYPE LINE OF bapiret2_t.


    s_bankdetail-bank_key      =   '03371318'. "Santander
    s_bankdetail-bank_acct     =   '01007186'.
    s_bankdetail-ctrl_key      =   '80'. "'82'

    CALL METHOD me->return_msg
      EXPORTING
        iv_msgno           = c_error_acct_dv_no_equal
      CHANGING
        it_return_expected = et_return_expected.

    f_cut->if_ex_bupa_bank_check~check(
      EXPORTING
       iv_activity                  = v_activity
       is_but000                    = s_but000
       iv_bkvid                     = v_bkvid
       is_bankdetail                = s_bankdetail
       it_but0bk_completed          = t_but0bk_completed
       is_bankdetail_x              = s_bankdetail_x
       iv_x_save                    = v_x_save
       iv_dont_check_bank_conn      = v_dont_check_bank_conn
       iv_check_only_external_data  = v_check_only_external_data
      CHANGING
        et_return = et_return ).

    "APAGA o campo não é pertinente
    MODIFY et_return INDEX 1
        FROM wa_return TRANSPORTING message_v4.


    cl_abap_unit_assert=>assert_equals(
      act   = et_return
      exp   = et_return_expected      ).

  ENDMETHOD.
**********************************************************************
  METHOD check_acct_filled_with_dv.

    DATA:
      et_return          TYPE bapiret2_t,                  "Return table
      et_return_expected TYPE bapiret2_t,                  "Return table expected
      wa_return          TYPE LINE OF bapiret2_t.

    s_bankdetail-bank_key      =   '10400008'. "Caixa
    s_bankdetail-bank_acct     =   '448878-4'.
    s_bankdetail-ctrl_key      =   '64'.

    CALL METHOD me->return_msg
      EXPORTING
        iv_msgno           = c_error_acct_filled_with_dv
      CHANGING
        it_return_expected = et_return_expected.

    f_cut->if_ex_bupa_bank_check~check(
      EXPORTING
       iv_activity                  = v_activity
       is_but000                    = s_but000
       iv_bkvid                     = v_bkvid
       is_bankdetail                = s_bankdetail
       it_but0bk_completed          = t_but0bk_completed
       is_bankdetail_x              = s_bankdetail_x
       iv_x_save                    = v_x_save
       iv_dont_check_bank_conn      = v_dont_check_bank_conn
       iv_check_only_external_data  = v_check_only_external_data
      CHANGING
        et_return = et_return ).

    "APAGA o campo não é pertinente
    MODIFY et_return INDEX 1
        FROM wa_return TRANSPORTING message_v4.

    cl_abap_unit_assert=>assert_equals(
      act   = et_return
      exp   = et_return_expected      ).

  ENDMETHOD.
**********************************************************************
  METHOD check_branch_dv_no_equal.

    DATA:
      et_return          TYPE bapiret2_t,                  "Return table
      et_return_expected TYPE bapiret2_t,                  "Return table expected]
      wa_return          TYPE LINE OF bapiret2_t.


    s_bankdetail-bank_key      =   '34170010'. "Itau MOD 10
    s_bankdetail-bank_acct     =   '0000000027607'.
    s_bankdetail-ctrl_key      =   '31'. "11

    CALL METHOD me->return_msg
      EXPORTING
        iv_msgno           = c_error_branch_dv_no_equal
      CHANGING
        it_return_expected = et_return_expected.

    f_cut->if_ex_bupa_bank_check~check(
      EXPORTING
       iv_activity                  = v_activity
       is_but000                    = s_but000
       iv_bkvid                     = v_bkvid
       is_bankdetail                = s_bankdetail
       it_but0bk_completed          = t_but0bk_completed
       is_bankdetail_x              = s_bankdetail_x
       iv_x_save                    = v_x_save
       iv_dont_check_bank_conn      = v_dont_check_bank_conn
       iv_check_only_external_data  = v_check_only_external_data
      CHANGING
        et_return = et_return ).

    "APAGA o campo não é pertinente
    MODIFY et_return INDEX 1
        FROM wa_return TRANSPORTING message_v4.

    cl_abap_unit_assert=>assert_equals(
      act   = et_return
      exp   = et_return_expected      ).

  ENDMETHOD.
**********************************************************************
  METHOD check_ctrl_key_is_initial.

    DATA:
      et_return          TYPE bapiret2_t,                  "Return table
      et_return_expected TYPE bapiret2_t,                  "Return table expected
      wa_return          TYPE LINE OF bapiret2_t.


    s_bankdetail-bank_key      =   '03371318'. "Santander
    s_bankdetail-bank_acct     =   '13554780'.
    s_bankdetail-ctrl_key      =   space.

    CALL METHOD me->return_msg
      EXPORTING
        iv_msgno           = c_error_ctrl_key_is_initial
      CHANGING
        it_return_expected = et_return_expected.

    f_cut->if_ex_bupa_bank_check~check(
      EXPORTING
       iv_activity                  = v_activity
       is_but000                    = s_but000
       iv_bkvid                     = v_bkvid
       is_bankdetail                = s_bankdetail
       it_but0bk_completed          = t_but0bk_completed
       is_bankdetail_x              = s_bankdetail_x
       iv_x_save                    = v_x_save
       iv_dont_check_bank_conn      = v_dont_check_bank_conn
       iv_check_only_external_data  = v_check_only_external_data
      CHANGING
        et_return = et_return ).

    "APAGA o campo não é pertinente
    MODIFY et_return INDEX 1
        FROM wa_return TRANSPORTING message_v4.

    cl_abap_unit_assert=>assert_equals(
      act   = et_return
      exp   = et_return_expected      ).

  ENDMETHOD.

**********************************************************************
*METHOD de apoio return_msg.
**********************************************************************
  METHOD return_msg.

    DATA:
       wa_return_expected TYPE LINE OF bapiret2_t.

    wa_return_expected-type         = 'E'.
    wa_return_expected-id           = 'Z_BUPA'.
    wa_return_expected-number       = iv_msgno.

    CASE iv_msgno.
      WHEN c_error_ctrl_key_less_than_2.

        wa_return_expected-message_v1  = v_bkvid.

      WHEN c_error_acct_is_not_numeric OR
           c_error_acct_filled_with_dv.

        "A conta bancaria &1 para o ID &2 possui dígitos não numéricos
        wa_return_expected-message_v2  = v_bkvid.
        wa_return_expected-message_v1  = s_bankdetail-bank_acct.


      WHEN  c_error_branch_dv_no_equal  OR
            c_error_acct_dv_no_equal    OR
            c_error_ctrl_key_is_initial.

        wa_return_expected-message_v1  = v_bkvid.

    ENDCASE.

    APPEND wa_return_expected TO it_return_expected.

  ENDMETHOD.

  METHOD check_santander.

    DATA:
      et_return          TYPE bapiret2_t,                  "Return table
      et_return_expected TYPE bapiret2_t,                  "Return table expected
      wa_return          TYPE LINE OF bapiret2_t.


    s_bankdetail-bank_key      =   '03371318'. "Santander
    s_bankdetail-bank_acct     =   '01007186'.
    s_bankdetail-ctrl_key      =   '82'.

    f_cut->if_ex_bupa_bank_check~check(
      EXPORTING
       iv_activity                  = v_activity
       is_but000                    = s_but000
       iv_bkvid                     = v_bkvid
       is_bankdetail                = s_bankdetail
       it_but0bk_completed          = t_but0bk_completed
       is_bankdetail_x              = s_bankdetail_x
       iv_x_save                    = v_x_save
       iv_dont_check_bank_conn      = v_dont_check_bank_conn
       iv_check_only_external_data  = v_check_only_external_data
      CHANGING
        et_return = et_return ).

    cl_abap_unit_assert=>assert_equals(
      act   = et_return
      exp   = et_return_expected      ).

  ENDMETHOD.

  METHOD check_bradesco.

    DATA:
      et_return          TYPE bapiret2_t,                  "Return table
      et_return_expected TYPE bapiret2_t,                  "Return table expected
      wa_return          TYPE LINE OF bapiret2_t.


    s_bankdetail-bank_key      =   '23722002'. "Bradesco
    s_bankdetail-bank_acct     =   '723'.
    s_bankdetail-ctrl_key      =   '84'.

    f_cut->if_ex_bupa_bank_check~check(
      EXPORTING
       iv_activity                  = v_activity
       is_but000                    = s_but000
       iv_bkvid                     = v_bkvid
       is_bankdetail                = s_bankdetail
       it_but0bk_completed          = t_but0bk_completed
       is_bankdetail_x              = s_bankdetail_x
       iv_x_save                    = v_x_save
       iv_dont_check_bank_conn      = v_dont_check_bank_conn
       iv_check_only_external_data  = v_check_only_external_data
      CHANGING
        et_return = et_return ).

    cl_abap_unit_assert=>assert_equals(
      act   = et_return
      exp   = et_return_expected      ).

  ENDMETHOD.

ENDCLASS.
